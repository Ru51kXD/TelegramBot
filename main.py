import schedule
import telebot
import sqlite3
from telebot import types
import time
from openai import OpenAI
import threading


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = telebot.TeleBot('6397841129:AAGaEv9jOOO4ImhKunybjRlmacqGHMiAHdI')

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –µ–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞
conn = sqlite3.connect('users.sql')
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞
cursor.execute('''CREATE TABLE IF NOT EXISTS users
                  (id INTEGER PRIMARY KEY AUTOINCREMENT, 
                  chat_id INTEGER UNIQUE, 
                  username TEXT UNIQUE, 
                  password TEXT, 
                  balance REAL)''')

conn.commit()

cursor.execute('''CREATE TABLE IF NOT EXISTS loans
                  (id INTEGER PRIMARY KEY AUTOINCREMENT, 
                  chat_id INTEGER UNIQUE, 
                  loan_amount REAL)''')

conn.commit()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM users WHERE chat_id=?", (chat_id,))
            user = cursor.fetchone()
            if user:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
                markup = types.ReplyKeyboardMarkup(row_width=2)
                itembtn1 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüë§')
                itembtn2 = types.KeyboardButton('–ë–∞–ª–∞–Ω—Åüí∞')
                itembtn3 = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µüí∏')
                itembtn4 = types.KeyboardButton('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—èüîÄ')
                itembtn5 = types.KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Çüí≥')
                itembtn6 = types.KeyboardButton('–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞üí≥')
                itembtn7 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ‚úèÔ∏è')
                itembtn8 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—åüóëÔ∏è')
                itembtn9 = types.KeyboardButton('–ü–æ–º–æ—â—åüÜò')
                itembtn10 = types.KeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüõí')
                markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6, itembtn7, itembtn8, itembtn9,itembtn10)
                bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
            else:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–æ–∂–∏–º –µ–º—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                markup = types.ReplyKeyboardMarkup(row_width=1)
                itembtn1 = types.KeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
                markup.add(itembtn1)
                bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º.", reply_markup=markup)
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

@bot.message_handler(func=lambda message: message.text == '–ú–∞–≥–∞–∑–∏–Ωüõí')
def show_store(message):
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn1 = types.KeyboardButton('–¢–æ–≤–∞—Ä 1 - 100 —Ä—É–±–ª–µ–π')
    itembtn2 = types.KeyboardButton('–¢–æ–≤–∞—Ä 2 - 200 —Ä—É–±–ª–µ–π')
    itembtn3 = types.KeyboardButton('–¢–æ–≤–∞—Ä 3 - 300 —Ä—É–±–ª–µ–π')
    markup.add(itembtn1, itembtn2, itembtn3)

    bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–¢–æ–≤–∞—Ä"
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–¢–æ–≤–∞—Ä"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Ç–æ–≤–∞—Ä–∞
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
# –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
items = ['–¢–æ–≤–∞—Ä 1 - 100 —Ä—É–±–ª–µ–π', '–¢–æ–≤–∞—Ä 2 - 150 —Ä—É–±–ª–µ–π', '–¢–æ–≤–∞—Ä 3 - 200 —Ä—É–±–ª–µ–π']

def show_items(message):
    markup = types.ReplyKeyboardMarkup(row_width=1)
    for item in items:
        markup.add(types.KeyboardButton(item))
    markup.add(types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É'))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É"
    bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–¢–æ–≤–∞—Ä"
@bot.message_handler(func=lambda message: message.text in items)
def buy_item(message):
    chat_id = message.chat.id
    item_price = int(message.text.split('-')[-1].strip().split()[0])  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE chat_id=?", (chat_id,))
            user = cursor.fetchone()
            if user:
                user_balance = user[0]
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤—ã–±–æ—Ä–∞ –æ–ø–ª–∞—Ç—ã
                markup = types.ReplyKeyboardMarkup(row_width=2)
                itembtn1 = types.KeyboardButton('–í –∫—Ä–µ–¥–∏—Ç')
                itembtn2 = types.KeyboardButton('–ü—Ä–æ—Å—Ç–æ –ø–æ–∫—É–ø–∫–∞')
                markup.add(itembtn1, itembtn2)
                bot.reply_to(message, f"–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã. –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {item_price} —Ä—É–±.", reply_markup=markup)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                bot.register_next_step_handler(message, lambda m: handle_payment_method(m, chat_id, item_price))
            else:
                bot.reply_to(message, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∫—É–ø–∫–∏:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É"
@bot.message_handler(func=lambda message: message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É')
def finish_purchase(message):
    chat_id = message.chat.id
    show_items(message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
def handle_payment_method(message, chat_id, item_price):
    payment_method = message.text.lower()
    if payment_method == '–≤ –∫—Ä–µ–¥–∏—Ç':
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∫—É–ø–∫—É –≤ –∫—Ä–µ–¥–∏—Ç
        handle_credit_purchase(message, chat_id, item_price)
    elif payment_method == '–ø—Ä–æ—Å—Ç–æ –ø–æ–∫—É–ø–∫–∞':
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –ø–æ–∫—É–ø–∫—É
        handle_regular_purchase(message, chat_id, item_price)
    elif payment_method == '–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É':
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        finish_purchase(message)
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –≤ –∫—Ä–µ–¥–∏—Ç
def handle_credit_purchase(message, chat_id, item_price):
    try:
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ —Å —É—á–µ—Ç–æ–º –∫—Ä–µ–¥–∏—Ç–∞
        item_price_credit = round(item_price * 1.025, 2)
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT loan_amount FROM loans WHERE chat_id=?", (chat_id,))
            loans = cursor.fetchall()
            total_loan_amount = sum(loan[0] for loan in loans)
            new_loan_amount = total_loan_amount + item_price_credit
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            cursor.execute("INSERT INTO loans (chat_id, loan_amount) VALUES (?, ?)", (chat_id, new_loan_amount))
            conn.commit()
            bot.reply_to(message, f"–ü–æ–∫—É–ø–∫–∞ –≤ –∫—Ä–µ–¥–∏—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–∞. –í–∞—à —Ç–µ–∫—É—â–∏–π –∫—Ä–µ–¥–∏—Ç: {new_loan_amount} —Ä—É–±.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–∫—É–ø–∫–∏ –≤ –∫—Ä–µ–¥–∏—Ç:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
def handle_regular_purchase(message, chat_id, item_price):
    markup = create_main_keyboard()
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE chat_id=?", (chat_id,))
            user = cursor.fetchone()
            if user:
                user_balance = user[0]
                if user_balance >= item_price:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    new_balance = user_balance - item_price
                    cursor.execute("UPDATE users SET balance=? WHERE chat_id=?", (new_balance, chat_id))
                    conn.commit()
                    bot.reply_to(message, f"–ü—Ä–æ—Å—Ç–∞—è –ø–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞. –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ: {new_balance} —Ä—É–±.", reply_markup = markup)
                else:
                    bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.", reply_markup = markup)
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ã—á–Ω–æ–π –ø–æ–∫—É–ø–∫–∏:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", reply_markup = markup)

@bot.message_handler(func=lambda message: message.text == '–ü–æ–º–æ—â—åüÜò')
def help(message):
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    faq_message = '''
        –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã:

        1. –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?
           - –û—Ç–≤–µ—Ç: –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /register.

        2. –ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å?
           - –û—Ç–≤–µ—Ç: –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ë–∞–ª–∞–Ω—Å" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /balance.

        3. –ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?
           - –û—Ç–≤–µ—Ç: –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /topup, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

        4. –ö–∞–∫ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é?
           - –û—Ç–≤–µ—Ç: –î–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /transaction, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

        5. –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç?
           - –û—Ç–≤–µ—Ç: –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /loan, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

        6. –ö–∞–∫ –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç?
           - –û—Ç–≤–µ—Ç: –î–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /repay_loan, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

        7. –ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ?
           - –û—Ç–≤–µ—Ç: –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit_profile, –∞ –∑–∞—Ç–µ–º —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

        8. –ö–∞–∫ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å?
           - –û—Ç–≤–µ—Ç: –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–≤–æ–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–£–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å" –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /delete_account.

        9. –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?
           - –û—Ç–≤–µ—Ç: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –∏–ª–∏ —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–æ–π. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.
        '''
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    bot.reply_to(message, faq_message)


@bot.message_handler(func=lambda message: message.text == '–£–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—åüóëÔ∏è')
def delete_account(message):
    chat_id = message.chat.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–µ–¥–∏—Ç–Ω–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT loan_amount FROM loans WHERE chat_id=?", (chat_id,))
            loan = cursor.fetchone()
            if loan:
                bot.reply_to(message, "–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å, –ø–æ–∫–∞ –µ—Å—Ç—å –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –∫—Ä–µ–¥–∏—Ç—É.")
                return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª—è—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å

        # –ü–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å" –∏ "–û—Ç–º–µ–Ω–∏—Ç—å"
        markup = types.ReplyKeyboardMarkup(row_width=2)
        confirm_button = types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
        cancel_button = types.KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å')
        markup.add(confirm_button, cancel_button)
        bot.send_message(chat_id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å?", reply_markup=markup)
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å')
def confirm_delete(message):
    chat_id = message.chat.id
    try:
        # –£–¥–∞–ª—è–µ–º —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("DELETE FROM users WHERE chat_id=?", (chat_id,))
            conn.commit()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —á–∞—Ç
        chat_exists = bot.get_chat(chat_id)
        if chat_exists:
            bot.reply_to(message, "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.")
            # –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ —É–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            markup = types.ReplyKeyboardMarkup(row_width=1)
            itembtn1 = types.KeyboardButton('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
            markup.add(itembtn1)
            bot.send_message(chat_id, "–í–∞—à–∞ —É—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.",
                             reply_markup=markup)
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∏—Ç—å"
# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∏—Ç—å"
@bot.message_handler(func=lambda message: message.text == '–û—Ç–º–µ–Ω–∏—Ç—å')
def cancel_delete(message):
    chat_id = message.chat.id
    try:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        markup = create_main_keyboard()
        bot.send_message(chat_id, "–£–¥–∞–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=markup)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ —É–¥–∞–ª–µ–Ω–∏—è —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

def create_main_keyboard():
    markup = types.ReplyKeyboardMarkup(row_width=2)
    itembtn1 = types.KeyboardButton('–ü—Ä–æ—Ñ–∏–ª—åüë§')
    itembtn2 = types.KeyboardButton('–ë–∞–ª–∞–Ω—Åüí∞')
    itembtn3 = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µüí∏')
    itembtn4 = types.KeyboardButton('–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—èüîÄ')
    itembtn5 = types.KeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Çüí≥')
    itembtn6 = types.KeyboardButton('–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞üí≥')
    itembtn7 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ‚úèÔ∏è')
    itembtn10 = types.KeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüõí')
    itembtn8 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—åüóëÔ∏è')

    itembtn9 = types.KeyboardButton('–ü–æ–º–æ—â—åüÜò')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6, itembtn7, itembtn8, itembtn9,itembtn10)
    return markup


@bot.message_handler(func=lambda message: message.text == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ‚úèÔ∏è')
def change_personal_data(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å? (–ù–∞–ø–∏—à–∏—Ç–µ '–∏–º—è', –∏–ª–∏ '–ø–∞—Ä–æ–ª—å'):")
    bot.register_next_step_handler(message, process_change_data)

def process_change_data(message):
    chat_id = message.chat.id
    data_to_change = message.text.lower()
    if data_to_change in ['–∏–º—è', '—Ñ–∞–º–∏–ª–∏—è', '–ø–∞—Ä–æ–ª—å']:
        bot.send_message(chat_id, f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {data_to_change}:")
        bot.register_next_step_handler(message, lambda m: save_new_data(chat_id, data_to_change, m.text))
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–∏–º—è', '—Ñ–∞–º–∏–ª–∏—è' –∏–ª–∏ '–ø–∞—Ä–æ–ª—å' –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.")

def save_new_data(chat_id, data_to_change, new_value):
    try:
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            if data_to_change == '–∏–º—è':
                cursor.execute("UPDATE users SET username=? WHERE chat_id=?", (new_value, chat_id))
            elif data_to_change == '—Ñ–∞–º–∏–ª–∏—è':
                cursor.execute("UPDATE users SET surname=? WHERE chat_id=?", (new_value, chat_id))
            elif data_to_change == '–ø–∞—Ä–æ–ª—å':
                cursor.execute("UPDATE users SET password=? WHERE chat_id=?", (new_value, chat_id))
            conn.commit()
            bot.send_message(chat_id, f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã: {data_to_change} -> {new_value}")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", e)
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")




# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç
@bot.message_handler(func=lambda message: message.text == '–û—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Çüí≥')
def apply_for_loan(message):
    chat_id = message.chat.id
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω—ã–π –∫—Ä–µ–¥–∏—Ç
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM loans WHERE chat_id=?", (chat_id,))
            existing_loan = cursor.fetchone()
            if existing_loan:
                bot.reply_to(message, "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫—Ä–µ–¥–∏—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≥–∞—Å–∏—Ç–µ –µ–≥–æ, –ø—Ä–µ–∂–¥–µ —á–µ–º –±—Ä–∞—Ç—å –Ω–æ–≤—ã–π.")
            else:
                bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞:")
                bot.register_next_step_handler(message, process_loan_application)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞:", e)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫—Ä–µ–¥–∏—Ç
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –∫—Ä–µ–¥–∏—Ç
def process_loan_application(message):
    chat_id = message.chat.id
    try:
        loan_amount = float(message.text)
        if loan_amount > 0:
            interest_rate = 2.5 / 100
            interest_amount = loan_amount * interest_rate
            total_amount_due = loan_amount + interest_amount
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–µ–¥–∏—Ç–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            with sqlite3.connect('users.sql') as conn:
                cursor = conn.cursor()
                cursor.execute("INSERT INTO loans (chat_id, loan_amount) VALUES (?, ?)", (chat_id, loan_amount))
                conn.commit()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—Ä–µ–¥–∏—Ç–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã
            markup = types.InlineKeyboardMarkup(row_width=2)
            confirm_button = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_loan_{loan_amount}")
            cancel_button = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_loan")
            markup.add(confirm_button, cancel_button)
            bot.send_message(chat_id,f"–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: {loan_amount} —Ä—É–±.\n–ü—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ –∫—Ä–µ–¥–∏—Ç—É: {interest_amount} —Ä—É–±.\n–ò—Ç–æ–≥–æ –∫ –≤–æ–∑–≤—Ä–∞—Ç—É: {total_amount_due} —Ä—É–±.\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –∫—Ä–µ–¥–∏—Ç:",
                             reply_markup=markup)
        else:
            bot.reply_to(message, "–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")
    except ValueError:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ —á–∏—Å–ª–æ–º.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith('confirm_loan_'))
def confirm_loan(call):
    try:
        chat_id = call.message.chat.id
        total_amount_due = float(call.data.split('_')[-1])

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_balance = 0
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE chat_id = ?", (chat_id,))
            row = cursor.fetchone()
            if row:
                current_balance = row[0]

        # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏–±–∞–≤–ª—è–µ–º —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞)
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("UPDATE users SET balance = ? WHERE chat_id = ?",
                           (current_balance + total_amount_due, chat_id))
            conn.commit()

        bot.send_message(chat_id,
                         f"–ö—Ä–µ–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {current_balance + total_amount_due} —Ä—É–±.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞:", e)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –∫—Ä–µ–¥–∏—Ç–∞
@bot.callback_query_handler(func=lambda call: call.data == 'cancel_loan')
def cancel_loan(call):
    try:
        chat_id = call.message.chat.id
        bot.send_message(chat_id, "–ó–∞—è–≤–∫–∞ –Ω–∞ –∫—Ä–µ–¥–∏—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∫—Ä–µ–¥–∏—Ç–∞:", e)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞
@bot.message_handler(func=lambda message: message.text == '–ü–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞üí≥')
def repay_loan(message):
    chat_id = message.chat.id
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE chat_id=?", (chat_id,))
            user = cursor.fetchone()
            if user:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
                cursor.execute("SELECT loan_amount FROM loans WHERE chat_id=?", (chat_id,))
                loan = cursor.fetchone()
                if loan:
                    # –ï—Å–ª–∏ –µ—Å—Ç—å, –ø–æ–ª—É—á–∞–µ–º —Å—É–º–º—É –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ (—Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤)
                    debt = calculate_loan_debt(chat_id)
                    bot.reply_to(message, f"–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏: {debt} —Ä—É–±.\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –≥–æ—Ç–æ–≤—ã –≤–Ω–µ—Å—Ç–∏ —Å–µ–π—á–∞—Å:")
                    bot.register_next_step_handler(message, process_repayment)
                else:
                    bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–µ–π –ø–æ –∫—Ä–µ–¥–∏—Ç—É.")
            else:
                bot.reply_to(message, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≥–∞—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞:", e)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—É–º–º—ã –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤)
def calculate_loan_debt(chat_id):
    try:
        interest_rate = 2.5 / 100
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT loan_amount FROM loans WHERE chat_id=?", (chat_id,))
            loan_amount = cursor.fetchone()
            if loan_amount:
                loan_amount = loan_amount[0]
                interest_amount = loan_amount * interest_rate
                total_amount_due = loan_amount + interest_amount
                return total_amount_due
            else:
                return 0
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç—É:", e)
        return 0

def calculate_loan_debt2(chat_id):
    try:
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT loan_amount FROM loans WHERE chat_id=?", (chat_id,))
            loan_amount = cursor.fetchone()
            if loan_amount:
                return loan_amount[0]
            else:
                return 0
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç—É:", e)
        return 0



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
def send_loan_notification(chat_id):
    while True:
        try:
            debt = calculate_loan_debt(chat_id)
            if debt > 0:
                bot.send_message(chat_id,
                                 f"–£ –≤–∞—Å –µ—Å—Ç—å –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –∫—Ä–µ–¥–∏—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ {debt} —Ä—É–±. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≥–∞—Å–∏—Ç–µ –µ–µ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.")
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏:", e)

        # –ü–∞—É–∑–∞ –Ω–∞ –æ–¥–Ω—É –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        time.sleep(60)


# –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
chat_id = 1415990319  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º chat_id
notification_thread = threading.Thread(target=send_loan_notification, args=(chat_id,))
notification_thread.daemon = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º –ø–æ—Ç–æ–∫–∞
notification_thread.start()


# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–∞–º chat_id


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
def process_repayment(message):
    chat_id = message.chat.id
    try:
        amount = float(message.text)
        if amount > 0:
            debt = calculate_loan_debt(chat_id)
            if amount <= debt:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                current_balance = get_user_balance(chat_id)
                if current_balance >= amount:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞
                    update_user_balance(chat_id, current_balance - amount)

                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
                    new_debt = debt - amount
                    update_loan_debt(chat_id, new_debt)

                    if new_debt > 0:
                        bot.reply_to(message, f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–≥–∞—Å–∏–ª–∏ {amount} —Ä—É–±. –û—Å—Ç–∞—Ç–æ–∫ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏: {new_debt:.2f} —Ä—É–±.")
                    else:
                        # –ï—Å–ª–∏ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–≥–∞—à–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é, —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –∫—Ä–µ–¥–∏—Ç–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        with sqlite3.connect('users.sql') as conn:
                            cursor = conn.cursor()
                            cursor.execute("DELETE FROM loans WHERE chat_id=?", (chat_id,))
                            conn.commit()
                        bot.reply_to(message, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–≥–∞—Å–∏–ª–∏ –∫—Ä–µ–¥–∏—Ç. –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–≥–∞—à–µ–Ω–∞.")
                else:
                    bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –¥–ª—è –ø–æ–≥–∞—à–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞.")
            else:
                bot.reply_to(message, f"–°—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ ({debt} —Ä—É–±.).")
        else:
            bot.reply_to(message, "–°—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")
    except ValueError:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —á–∏—Å–ª–æ–º.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≥–∞—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–∞:", e)






def update_loan_debt(chat_id, new_debt):
    try:
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("UPDATE loans SET loan_amount=? WHERE chat_id=?", (new_debt, chat_id))
            conn.commit()
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—É–º–º—ã –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏:", e)



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_balance(chat_id):
    with sqlite3.connect('users.sql') as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT balance FROM users WHERE chat_id=?", (chat_id,))
        row = cursor.fetchone()
        if row:
            return row[0]
        else:
            return 0


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_user_balance(chat_id, new_balance):
    with sqlite3.connect('users.sql') as conn:
        cursor = conn.cursor()
        cursor.execute("UPDATE users SET balance=? WHERE chat_id=?", (new_balance, chat_id))
        conn.commit()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile


@bot.message_handler(func=lambda message: message.text == '–ü—Ä–æ—Ñ–∏–ª—åüë§')
def view_profile(message):
    chat_id = message.chat.id
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT * FROM users WHERE chat_id=?", (chat_id,))
            user = cursor.fetchone()
            if user:
                username, password, balance = user[2], user[3], user[4]

                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å"
                keyboard = types.InlineKeyboardMarkup()
                show_button = types.InlineKeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å", callback_data="show_password")
                keyboard.add(show_button)

                # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–∫—Ä—ã—Ç—ã–º –ø–∞—Ä–æ–ª–µ–º –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
                response = f"–ò–º—è: {username}\n–ü–∞—Ä–æ–ª—å: *********\n–ë–∞–ª–∞–Ω—Å: {balance} —Ä—É–±."
                bot.reply_to(message, response, reply_markup=keyboard)
            else:
                bot.reply_to(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


@bot.callback_query_handler(func=lambda call: call.data == "show_password")
def show_password(call):
    chat_id = call.message.chat.id
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT password FROM users WHERE chat_id=?", (chat_id,))
            user_password = cursor.fetchone()[0]

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è
            bot.send_message(chat_id, f"–í–∞—à –ø–∞—Ä–æ–ª—å: {user_password}")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance
@bot.message_handler(func=lambda message: message.text == '–ë–∞–ª–∞–Ω—Åüí∞')
def check_balance(message):
    chat_id = message.chat.id
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä–∞
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT balance FROM users WHERE chat_id=?", (chat_id,))
            result = cursor.fetchone()
            if result:
                bot.reply_to(message, f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {result[0]} —Ä—É–±.")
            else:
                bot.reply_to(message, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /top_up
@bot.message_handler(func=lambda message: message.text == '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µüí∏')
def top_up_balance(message):
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_top_up)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /transfer
@bot.message_handler(func=lambda message: message.text == '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—èüîÄ')
def transfer_balance(message):
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ username –ø–æ–ª—É—á–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")
    bot.register_next_step_handler(message, process_transfer)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /register
@bot.message_handler(func=lambda message: message.text == '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
def register_user(message):
    bot.reply_to(message, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")
    bot.register_next_step_handler(message, process_registration)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def process_registration(message):
    chat_id = message.chat.id
    try:
        username, password = message.text.split()
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä–∞
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("INSERT INTO users (chat_id, username, password, balance) VALUES (?, ?, ?, ?)",
                           (chat_id, username, password, 0))
            conn.commit()
        bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.\n –í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    except ValueError:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞
def process_top_up(message):
    chat_id = message.chat.id
    try:
        amount = float(message.text)
        if amount > 0:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä–∞ –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            with sqlite3.connect('users.sql') as conn:
                cursor = conn.cursor()
                cursor.execute("UPDATE users SET balance = balance + ? WHERE chat_id = ?", (amount, chat_id))
                conn.commit()
            bot.reply_to(message, f"–°—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {amount} —Ä—É–±. –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {amount} —Ä—É–±.")
        else:
            bot.reply_to(message, "–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")
    except ValueError:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")




# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ —Å—Ä–µ–¥—Å—Ç–≤
def process_transfer(message):
    sender_chat_id = message.chat.id
    try:
        # –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        split_message = message.text.split(maxsplit=1)
        amount = float(split_message[0])
        recipient_username = split_message[1].strip()

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—ä–µ–∫—Ç –∫—É—Ä—Å–æ—Ä–∞
        with sqlite3.connect('users.sql') as conn:
            cursor = conn.cursor()
            cursor.execute("SELECT chat_id FROM users WHERE username=?", (recipient_username,))
            recipient_chat_id = cursor.fetchone()
            if recipient_chat_id:
                recipient_chat_id = recipient_chat_id[0]
                if amount > 0:
                    cursor.execute("SELECT balance FROM users WHERE chat_id=?", (sender_chat_id,))
                    sender_balance = cursor.fetchone()
                    if sender_balance and sender_balance[0] >= amount:
                        cursor.execute("UPDATE users SET balance = balance - ? WHERE chat_id = ?", (amount, sender_chat_id))
                        cursor.execute("UPDATE users SET balance = balance + ? WHERE chat_id = ?",
                                       (amount, recipient_chat_id))
                        conn.commit()
                        bot.reply_to(message,
                                     f"–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –° –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ —Å–ø–∏—Å–∞–Ω–æ {amount} —Ä—É–±., –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {recipient_username} –∑–∞—á–∏—Å–ª–µ–Ω–æ {amount} —Ä—É–±.")
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–µ–Ω–µ–≥
                        bot.send_message(recipient_chat_id, f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ {amount} —Ä—É–±. –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.username}")
                    else:
                        bot.reply_to(message, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á–µ—Ç—É.")
                else:
                    bot.reply_to(message, "–°—É–º–º–∞ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π.")
            else:
                bot.reply_to(message, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except ValueError:
        bot.reply_to(message, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –∏–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")
    except sqlite3.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–∞:", e)
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
